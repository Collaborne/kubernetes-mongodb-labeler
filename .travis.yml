dist: trusty
sudo: false
group: beta

language: node_js
node_js:
- lts/carbon
services:
- docker
cache:
  directories:
  - node_modules
  - "$HOME/.cache/bower"
  - "$HOME/.cache/pip"
before_install:
- if [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then BASE_NAME=${TRAVIS_BRANCH}; else BASE_NAME=pr${TRAVIS_PULL_REQUEST}; fi
- NAME=`echo ${BASE_NAME} | tr -cd '[\-._[:alnum:]]'`
- TS=`date +%Y%m%dT%H%M%S`
- VERSION_TAG=${NAME}-${TS}-${TRAVIS_COMMIT}
- TAGS="${NAME} ${VERSION_TAG}"
- if [ "${TRAVIS_PULL_REQUEST}" = "false" ] && [ "${TRAVIS_BRANCH}" = "master" ]; then TAGS="${TAGS} latest"; fi

- pip install --user awscli | cat
- eval `$HOME/.local/bin/aws ecr get-login --region eu-west-1 --no-include-email`

- if [ -d node_modules ] && [ x$(cat node_modules/.last-node-version 2>/dev/null) != x$(node -e 'console.log(process.version)') ]; then npm rebuild --update-binary && node -e 'console.log(process.version)' > node_modules/.last-node-version; fi
install:
- npm install
- npm prune && npm shrinkwrap && mkdir -p deploy && cp package.json npm-shrinkwrap.json deploy && cp -r src deploy/src && npm install --production --prefix deploy --ignore-scripts
after_success:
- docker build `echo ${TAGS} | sed -re "s,\b([-._[:alnum:]]+)\b,-t ${DOCKER_NAME}:\1,g"` .
deploy:
  provider: script
  script: "${SHELL} ./travis-deploy.sh ${DOCKER_NAME} ${TAGS}"
  on:
    all_branches: true
env:
  global:
    - DOCKER_NAME=499577160181.dkr.ecr.eu-west-1.amazonaws.com/collaborne/kubernetes-mongodb-labeler
    - secure: "n1V8OXsU/r4P4pJlA2RDKpAB3r92lgJ0mIUAyCGCPFMxyFljhprSxTkwsOOqm5z+Yes8OEXnoyAJ5JLCGbLTqd0RulR+xvwxFP9j3etg8NmmCsmhqv+S4PPkW1+x0LdLmj2IBlAIS4MNyy26ON1bSXlPd6H5NlPcOATNUtbViT0fCCIin7DN2vMMB7xv2ZGIbFrmdO5txg8NaC0kjWykGIGXN9BuBXsCo5nUWvsGfxnNBgYDdP78qBeEkaKRuNepNfSeKzkQVw/TXwpk/hD5VqJdGP2Eog8gbwEM36bSut/wEhdC2ops165XdVNVW+3HN4Yjrjq1iawbM48hk8GBwMnDVk7/sYlIwN2ziNcTyL/vEKSRAN8z0bpuJJLNwABYFTTifZzP+snEot7VIE/z6NyhqHAvD2NmqNR+lVgxkvxZfmWl1TMm525QQaqGm3TUmSMIYqSA/1lLB9qB9z2LmY4GarBbhF1KBLPYtvzjhar2lEsmL0JQ4MOZZGRzaNpxMIeIcmyajysrh/SGhSLuvgweUHBqKkvW8GqIvMO1sxek887n3+23+aLVizX3aUXDl3accegdwnDqr09xz+x9UhRX8BNUOAx7pxo+vdGjwMSHCuDLQuymgD/HMVSa/KGMEJslFhyoWwdSVunQf8+C6E10fjD99sHrzWz3+i1b0TQ="
    - secure: "Hgb4YYE5VejLaNS3hcZXgLISi0pIwna1/44CXZEs7gjP2fdqdj/Ne78fe4mPDmhWr1gTwlTp71mghrNBCFrv4+ymUsB4bcJYI6yWeBTOnELHIwTYbdg6vNmhIGO1X0V74T3vs9QzbP+RFlSkUWsECiUkXPV0waJgOEDBJ04E/FnmLOrqa0Oo8EZojU6GiQ/rr5W8OdtjXUShFqfOA5CWxP1gGFvSPPiQN1hU1D+Ek4jJp4UsTJ9CcH8FEydNnei5Mzfe62S28XsOSg34MAHmdIMQ0w2533zoDeLXnva1maSCSTqc+X/vwabpGdzqbp5NYBQKRvmPgQ1SYwWMQPxYZGtIicz0CMbQLWGJpVRLOt1SPFrvPhKGWXgVR5X5TNdjDWcIK/x0ILKvVvUjpEVVKlxECrS2JzRquthSbkC08cum465EL/1HcBljQwv3A/7dPCwX7Bat7dt3tFfYc6eX2jqq8XWMzmU50EkZL9jKeaE+6lwevgdb+DNSvj2d6HMfyZcK274moRNDWOYFRkhKy9+ixdLeWiZqdI/dHhrJqIA+N1mRNKF8ls0bplJYhmAPh+zv9zB0nKTIsAIOH0X0CAafowTL2cYqMlDwuKrskBhBLT5oLnRDoaP7zO3rqD+rXIgo1QJfuXfBFdz5Xqkh7Ft0Xo8rObdd1fvE0lrEQCs="
